"""
Django settings for newshub project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from django.urls import reverse_lazy


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9kumj=)%-i6z6lw#e0wgp@sc%y=nyu)#hm14n)gyi=x38$4l#u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG =False

#ALLOWED_HOSTS = ['www.moremehub.com', 'moremehub.com']
ALLOWED_HOSTS = ['*']

SITE_ID = 1
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'articles.apps.ArticlesConfig',
    'news_recommendation.apps.NewsRecommendationConfig',
    'account.apps.AccountConfig',
    'actions.apps.ActionsConfig',
    'tagging',
    'ckeditor',
    'ckeditor_uploader',
    'sorl.thumbnail',
]

CKEDITOR_UPLOAD_PATH = 'post_images/'
CKEDITOR_CONFIGS = {
    'special': {
        'toolbar': 'Special',
        'height': '600px',
        'width': '100%',

        'contentsCss': 'img {max-width: 100%;height: auto !important;}',
        'toolbar_Special': [
            ['Bold', 'Youtube', 'Image'],
            ['Wordcount', 'Notification'],
            ['Link', 'Unlink', 'Anchor'],
            ['Undo', 'Redo', ], ['Styles', 'Format',
                                 'Italic', 'Underline', 'SpellChecker'],
            ['Flash', 'Table', 'HorinzontalRule', ],
            ['Smiley', 'SpecialChar'],
            ['BGColor', 'TextColor', 'Source'], ['NumberedList', 'BulletedList',
                                                 'Outdent', 'Indent', 'JustifyCenter', 'JustifyLeft', 'JustifyRight']

        ],
        'extraPlugins': ','.join(['youtube', 'image2','wordcount','notification' ]), 'allowedContent': True, 'removePlugins': 'iframe',

    }
}

CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_RESTRICT_BY_USER = True
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'newshub.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'newshub.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'moreme$moremebas',
        'USER': 'moreme',
        'PASSWORD': '@18061999Ayodeji',
        'HOST': 'moreme.mysql.pythonanywhere-services.com',

    }
}
"""

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

STATIC_ROOT = os.path.join(BASE_DIR, 'assets')


MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

##TAGGING CONFIGURATION##
FORCE_LOWERCASE_TAGS = True
MAX_TAG_LENGTH = 20


ABSOLUTE_URL_OVERRIDES = {
    'auth.user': lambda u: reverse_lazy('user_detail', args=[u.username])
}

LOGIN_URL = 'login'
